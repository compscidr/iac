# balena cli
- name: install balena cli
  become: true
  tags: balena
  ansible.builtin.unarchive:
    src: https://github.com/balena-io/balena-cli/releases/download/v12.44.29/balena-cli-v12.44.29-linux-x64-standalone.zip
    dest: /opt
    remote_src: true

# add /opt/balana-cli to path
- name: add balena to to path
  become: true
  tags: balena
  ansible.builtin.lineinfile:
    dest: /etc/environment
    state: present
    backrefs: true
    regexp: 'PATH=(["]*)((?!.*?/opt/balena-cli).*?)(["]*)$'
    line: 'PATH=\1\2:/opt/balena-cli\3'

- name: add ansible GPG
  tags: ansible
  become: true
  ansible.builtin.apt_key:
    keyserver: keyserver.ubuntu.com
    id: 6125E2A8C77F2818FB7BD15B93C4A3FD7BB9C367
    keyring: /etc/apt/trusted.gpg.d/ansible.gpg

- name: Add ansible PPA
  become: true
  tags: ansible
  ansible.builtin.apt_repository:
    repo: ppa:ansible/ansible

- name: install terraform
  ansible.builtin.include_role:
    name: diodonfrost.terraform
    apply:
      become: true

- name: Add packer GPG
  tags: packer
  become: true
  ansible.builtin.apt_key:
    keyserver: https://apt.releases.hashicorp.com/gpg
    id: 798AEC654E5C15428C8E42EEAA16FCBCA621E701
    keyring: /etc/apt/trusted.gpg.d/hashicorp.gpg

- name: Add packer apt repository
  become: true
  tags: packer
  ansible.builtin.apt_repository:
    repo: >
      deb [arch={{ [ansible_architecture] | map('extract', deb_architecture) | first }}]
      https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main
    state: present

- name: Install Ansible, Vagrant, Packer and AWS CLI
  tags: packer, vagrant, ansible, aws
  become: true
  ansible.builtin.apt:
    pkg:
      - packer
      - vagrant
      - ansible
      - awscli

- name: Remove ansible-lint apt package if present
  become: true
  tags: ansible
  ansible.builtin.apt:
    pkg:
      - ansible-lint
    state: absent

- name: Install Ansible Linters via PiP
  tags: ansible
  ansible.builtin.pip:
    name:
      - ansible-lint==6.0.2
      - yamllint==1.26.3
      - ruamel_yaml==0.17.21

# bashrc updates for DEBEMAIL and DEBFULLNAME (for building deb packages)
- name: Update bashrc debmaintainer
  tags: debmaintainer
  ansible.builtin.lineinfile:
    dest: "/home/{{ username }}/.bashrc"
    owner: "{{ username }}"
    line: "{{ item }}"
  with_items:
    - 'DEBEMAIL="{{ email }}"'
    - 'DEBFULLNAME="{{ fullname  }}"'

- name: Create AWS config directory
  tags: aws
  become_user: "{{ username }}"
  ansible.builtin.file:
    path: ~/.aws
    state: directory
    mode: '0700'
    owner: "{{ username }}"
    group: "{{ username }}"

- name: Copy AWS credentials file
  become_user: "{{ username }}"
  tags: aws
  ansible.builtin.copy:
    src: files/aws/credentials
    dest: ~/.aws/credentials
    mode: '0600'
    owner: "{{ username }}"
    group: "{{ username }}"

- name: Copy AWS config file
  become_user: "{{ username }}"
  tags: aws
  ansible.builtin.copy:
    src: files/aws/config
    dest: ~/.aws/config
    mode: '0600'
    owner: "{{ username }}"
    group: "{{ username }}"

- name: Install dotcl (digital ocean ctl)
  become: true
  tags: doctl
  ansible.builtin.unarchive:
    src: >
      https://github.com/digitalocean/doctl/releases/download/v1.66.0/doctl-1.66.0-linux-{{ [ansible_architecture] | map('extract', deb_architecture) | first }}.tar.gz
    dest: /usr/local/bin
    remote_src: true

- name: Create doctl config directory
  tags: doctl
  become_user: "{{ username }}"
  ansible.builtin.file:
    path: ~/.config/doctl
    state: directory
    mode: '0700'
    owner: "{{ username }}"
    group: "{{ username }}"

- name: Copy doctl config file
  become_user: "{{ username }}"
  tags: doctl
  ansible.builtin.copy:
    src: files/doctl/config.yaml
    dest: ~/.config/doctl/config.yaml
    mode: '0600'
    owner: "{{ username }}"
    group: "{{ username }}"

# bashrc updates DIGITALOCEAN_TOKEN
- name: Update bashrc DIGITALOCEAN_TOKEN
  tags: doctl
  ansible.builtin.lineinfile:
    dest: "/home/{{ username }}/.bashrc"
    owner: "{{ username }}"
    line: "export DIGITALOCEAN_TOKEN={{ do_token }}"
