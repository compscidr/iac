- name: install shell tools
  become: true
  ansible.builtin.apt:
    pkg:
      - fzf

# nano
- name: install nano rc
  become_user: "{{ username }}"
  ansible.builtin.copy:
    src: files/.nanorc
    dest: ~/.nanorc
    mode: '644'
    owner: "{{ username }}"
    group: "{{ username }}"

# better shell + tmux
- name: install command line apt packages (fish, powerline, tmux, byobu)
  tags: shell
  become: true
  ansible.builtin.apt:
    pkg:
      - fish
      - powerline
      - tmux
      - byobu
      - neofetch
      - screen

- name: tmux config
  become_user: "{{ username }}"
  ansible.builtin.git:
    repo: https://github.com/gpakosz/.tmux.git
    dest: ~/.tmux
    version: 3bfec1a25a8a66dd251d37f4efcd6a0e9f30a6da

- name: tmux link
  become_user: "{{ username }}"
  ansible.builtin.file:
    src: ~/.tmux/.tmux.conf
    dest: ~/.tmux.conf
    state: link
    owner: "{{ username }}"
    group: "{{ username }}"

- name: tmux config local
  become_user: "{{ username }}"
  ansible.builtin.copy:
    src: files/.tmux.conf.local
    dest: ~/.tmux.conf.local
    mode: '644'
    owner: "{{ username }}"
    group: "{{ username }}"

- name: install oh-my-fish
  ansible.builtin.git:
    repo: https://github.com/oh-my-fish/oh-my-fish.git
    dest: ~/.local/share/omf-install
    update: true
    version: 0b1396ad7962073fa25615bf03c43b53eddc2d56
  become: true
  become_user: "{{ username }}"

- name: install oh-my-fish themes and plugins
  ansible.builtin.command: >
    fish -c "~/.local/share/omf-install/bin/install --noninteractive --yes"
  args:
    creates: ~/.local/share/omf/themes/default/
  become: true
  become_user: "{{ username }}"

- name: install bob the fish theme
  ansible.builtin.command: fish -c "omf install bobthefish"
  args:
    creates: "/home/{{ username }}/.local/share/omf/themes/bobthefish/"
  become: true
  become_user: "{{ username }}"

- name: Create fish functions directory
  become_user: "{{ username }}"
  ansible.builtin.file:
    mode: '755'
    path: "/home/{{ username }}/.config/fish/functions"
    state: directory

- name: Add fish keybindings for fzf
  ansible.builtin.lineinfile:
    mode: '755'
    dest: "/home/{{ username }}/.config/fish/functions/fish_user_key_bindings.fish"
    owner: "{{ username }}"
    create: true
    line: "fzf_key_bindings"

- name: install forgit for fish
  ansible.builtin.command: fish -c "omf install https://github.com/wfxr/forgit"
  args:
    creates: "/home/{{ username }}/.local/share/omf/pkg/fo"
  become: true
  become_user: "{{ username }}"

# bashrc updates for fzf (see /usr/share/doc/fzf/README.Debian)
# and forgit: https://github.com/wfxr/forgit
# and docker, docker-compose buildkit
- name: Update bashrc for various tools
  tags: bashrc
  ansible.builtin.lineinfile:
    dest: "/home/{{ username }}/.bashrc"
    owner: "{{ username }}"
    line: "{{ item }}"
  with_items:
    - "source /usr/share/doc/fzf/examples/key-bindings.bash"
    - "source <(curl -sSL git.io/forgit)"
    - "export COMPOSE_DOCKER_CLI_BUILD=1"
    - "export DOCKER_BUILDKIT=1"
    - "export DOCKER_CLIENT_TIMEOUT=120"
    - "export COMPOSE_HTTP_TIMEOUT=120"

- name: Update bashrc for various tools Ubuntu 20.04
  tags: fzf
  ansible.builtin.lineinfile:
    dest: "/home/{{ username }}/.bashrc"
    owner: "{{ username }}"
    line: "{{ item }}"
  with_items:
    - "source /usr/share/doc/fzf/examples/completion.bash"
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_release == 'focal'

- name: Update bashrc for various tools Ubuntu 22.04
  tags: fzf
  ansible.builtin.lineinfile:
    dest: "/home/{{ username }}/.bashrc"
    owner: "{{ username }}"
    line: "{{ item }}"
  with_items:
    - "source /usr/share/bash-completion/completions/fzf"
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_release == 'jammy'

- name: Remove bashrc lines for various tools upon upgrade to 22.04
  tags: fzf
  ansible.builtin.lineinfile:
    dest: "/home/{{ username }}/.bashrc"
    owner: "{{ username }}"
    line: "{{ item }}"
    state: absent
  with_items:
    - "source /usr/share/doc/fzf/examples/completion.bash"
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_release == 'jammy'
