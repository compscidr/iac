---
- name: Update Apt Cache
  become: true
  ansible.builtin.apt:
    update_cache: true
    upgrade: true
    cache_valid_time: 3600

- name: install various tools
  tags: common-tools
  become: true
  ansible.builtin.apt:
    pkg:
      - apt-transport-https
      - ca-certificates
      - software-properties-common
      - curl                    # command line http tool
      - wget                    # command line http tool
      - unzip
      - git
      - apt-show-versions

- name: install network tools
  become: true
  tags: network-tools
  ansible.builtin.apt:
    pkg:
      - arp-scan                # for ip <-> mac map search
      - dnsutils                # dig
      - ethtool                 # gets info like link speed
      - iftop                   # network top
      - iotop                   # disk top
      - net-tools               # ifconfig, netstat, arp
      - nmap                    # determine open ports
      - traceroute              # traceroute
      - nbtscan                 # netbios scanner
      - speedtest-cli           # bandwidth debugging
      - sshuttle                # forward ssh through tunnel
      - whois                   # whois
      - sqlite3                 # good db for integration tests
      - socat                   # sort of like nc but doesn't hang
      - sshfs                   # ssh mounts
      - iptables-persistent
      - tcpstat
      - fail2ban                # https://help.ubuntu.com/community/Fail2ban

- name: ensure python is python3 in ubuntu 20.04
  become: true
  ansible.builtin.apt:
    pkg:
      - python-is-python3
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_release == 'focal'

# https://github.com/nickjj/ansible-docker
- name: Ensure docker is installed on the target system
  tags: docker
  ansible.builtin.include_role:
    name: nickjj.docker
    apply:
      become: true

- name: adding {{ username }} to group docker
  tags: docker
  become: true
  ansible.builtin.user:
    name: "{{ username }}"
    groups: docker
    append: true

# don't lint-fix this or it will break the task
- name: setup default git configuration
  tags: git
  become_user: "{{ username }}"
  community.general.git_config:
    name="{{ item.name }}"
    value="{{ item.value }}"
    scope=global
  with_items:
    - { name: "user.name", value: "{{ fullname }}" }  # noqa yaml
    - { name: "user.email", value: "{{ email }}" }  # noqa yaml
    - { name: "user.signingkey", value: "{{ signingkey }}" }  # noqa yaml
    - { name: "pull.rebase", value: "false" }  # noqa yaml
    - { name: "init.defaultBranch", value: "main" } # noqa yaml

- name: install cheat # https://github.com/cheat/cheat/blob/master/INSTALLING.md
  tags: cheat
  become: true
  uncompress:
    copy: no  # noqa yaml
    src: https://github.com/cheat/cheat/releases/download/4.3.1/cheat-linux-{{ [ansible_architecture] | map('extract', deb_architecture) | first }}.gz
    dest: /usr/local/bin/cheat
    mode: '755'

# https://developer.1password.com/docs/cli/get-started/
- name: Install 1password cli
  become: true
  tags: 1password
  ansible.builtin.apt:
    deb: >
      https://downloads.1password.com/linux/debian/{{ [ansible_architecture] | map('extract', deb_architecture)
      | first }}/stable/1password-cli-{{ [ansible_architecture] | map('extract', deb_architecture) | first }}-latest.deb

# bash aliases for 1password cli
- name: 1password bash aliases
  tags: 1password
  ansible.builtin.blockinfile:
    path: "/home/{{ username }}/.bash_aliases"
    block: |
      alias op-signin='eval $(op signin)'
      alias op-logout='op signout'
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: 0600
