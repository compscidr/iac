---
- name: Install prereqs
  become: true
  tags: prereqs
  ansible.builtin.apt:
    update_cache: true
    pkg:
      - python3-debian

- name: Install android tools
  tags: android
  become: true
  ansible.builtin.apt:
    update_cache: true
    pkg:
      - adb
      - android-sdk-platform-tools-common

- name: Add user to group plugdev for adb
  become: true
  tags: android
  ansible.builtin.user:
    name: "{{ username }}"
    groups: plugdev
    append: true

- name: Create man directories for java installation
  tags: java
  become: true
  ansible.builtin.file:
    path: "/usr/share/man/man{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - 1
    - 7

- name: Install java tools
  tags: java
  become: true
  ansible.builtin.apt:
    pkg:
      - openjdk-21-jdk-headless

- name: Install cpp development tools
  become: true
  tags: cpp
  ansible.builtin.apt:
    pkg:
      - build-essential
      - cmake
      - autoconf
      - strace
      - ltrace
      - valgrind
      - hotspot
      - heaptrack
      - clang-format
      - clang-tidy
      - pkg-config

- name: Install ubuntu-specific development tools (perf)
  become: true
  ansible.builtin.apt:
    pkg:
      - linux-tools-common
      - linux-tools-generic
  when: ansible_distribution == 'Ubuntu'

- name: Install debian-specific development tools (perf)
  become: true
  ansible.builtin.apt:
    pkg:
      - linux-perf
  when: ansible_distribution == 'Debian'

- name: Install golang tools
  tags: golang
  become: true
  ansible.builtin.apt:
    pkg:
      - golang

- name: Install node development tools
  become: true
  tags:
    - node
    - npm
  ansible.builtin.apt:
    pkg:
      - npm

# yarn: https://www.itzgeek.com/how-tos/linux/ubuntu-how-tos/how-to-install-yarn-on-ubuntu-22-04-ubuntu-20-04.html
# https://docs.ansible.com/ansible/latest/collections/community/general/npm_module.html
- name: Install yarn node.js package
  become: true
  tags:
    - yarn
    - node
    - npm
  community.general.npm:
    name: yarn
    global: true

- name: Install tldr node package # https://tldr.sh/
  become: true
  tags:
    - tldr
    - node
    - npm
  community.general.npm:
    name: tldr
    global: true

- name: Check if php ppa repository exists
  tags: php
  become: true
  ansible.builtin.stat:
    path: /etc/apt/sources.list.d/php-ppa.sources
  register: php_ppa_repo_exists

- name: Add php ppa repository
  become: true
  tags: php
  ansible.builtin.deb822_repository:
    name: php-ppa
    state: present
    types: [deb]
    uris: "https://ppa.launchpadcontent.net/ondrej/php/ubuntu"
    suites: ["{{ ansible_distribution_release | lower }}"]
    components: [main]
    signed_by: "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0xB8DC7E53946656EFBCE4C1DD71DAEAAB4AD4CAB6"
    enabled: true
  when: not php_ppa_repo_exists.stat.exists

# todo: see why this is failing molecule
- name: Install php and php dev tools
  tags: php
  become: true
  ansible.builtin.import_role:
    name: geerlingguy.php

- name: Install python development tools
  become: true
  tags: python
  ansible.builtin.apt:
    update_cache: true
    pkg:
      - python3-dev
      - python3-pip
      - python3-venv
      - python3-setuptools
      - python-is-python3
      - python3-poetry
      - python3-passlib
      - pipx

- name: Install rust development tools
  tags: rust
  become: true
  ansible.builtin.apt:
    pkg:
      - rustc
      - cargo
 # - rustup # conflicts with rustc and cargo apparently

- name: Install ruby development tools
  tags: ruby
  become: true
  ansible.builtin.apt:
    pkg:
      - ruby-full

- name: Create zig directory if it does not exist
  tags: zig
  become: true
  ansible.builtin.file:
    path: /opt/zig
    state: directory
    mode: '0755'

- name: Install zig development tools
  tags: zig
  become: true
  ansible.builtin.unarchive:
    src: https://ziglang.org/download/0.13.0/zig-linux-x86_64-0.13.0.tar.xz
    dest: /opt/zig
    extra_opts: ['--strip-components=1', '--show-stored-names']
    remote_src: true

- name: Symlink zig program to /usr/local/bin
  tags: zig
  become: true
  ansible.builtin.file:
    src: /opt/zig/zig
    dest: /usr/local/bin/zig
    state: link

- name: Install dotcl (digital ocean ctl)
  become: true
  tags: doctl
  ansible.builtin.unarchive:
    src: "https://github.com/digitalocean/doctl/releases/download/v1.119.1/doctl-1.119.1-linux-{{
      [ansible_architecture] | map('extract', deb_architecture) | first }}.tar.gz"
    dest: /usr/local/bin
    remote_src: true

# note: this will require a restart to apply changes
- name: Set digitalocean access token
  become: true
  tags: doctl
  ansible.builtin.copy:
    content: "DIGITALOCEAN_ACCESS_TOKEN={{ lookup('community.general.onepassword', 'DigitalOcean', field='credential', vault='Infrastructure') }}"
    dest: /etc/environment.d/90-digitalocean.conf
    mode: "644"

- name: Download awscli
  become: true
  tags: aws
  ansible.builtin.unarchive:
    src: "https://awscli.amazonaws.com/awscli-exe-linux-{{ ansible_architecture }}.zip"
    dest: /tmp
    remote_src: true

- name: Install awscli
  become: true
  tags: aws
  ansible.builtin.command: ./install --update
  args:
    chdir: "/tmp/aws"
  register: awscli_status
  changed_when: "'changed' in awscli_status.stdout"

# note: this will require a restart to apply changes
- name: Set aws access token
  become: true
  tags: aws
  ansible.builtin.copy:
    content: |
      AWS_ACCESS_KEY_ID={{ lookup('community.general.onepassword', 'aws_key_id', field='credential', vault='Infrastructure') }}
      AWS_SECRET_ACCESS_KEY={{ lookup('community.general.onepassword', 'aws_secret_access_key', field='credential', vault='Infrastructure') }}
      AWS_DEFAULT_REGION=us-west-1
      AWS_DEFAULT_OUTPUT=json
    dest: /etc/environment.d/90-aws.conf
    mode: "644"

- name: Add hashicorp repository
  become: true
  tags: hashicorp
  ansible.builtin.deb822_repository:
    name: hashicorp
    state: present
    types: [deb]
    uris: "https://apt.releases.hashicorp.com"
    suites: "{{ ansible_distribution_release }}"
    components: [main]
    signed_by: "https://apt.releases.hashicorp.com/gpg"
    enabled: true

- name: Install hashicorp tools
  become: true
  tags:
    - hashicorp
    - vagrant
    - terraform
    - packer
  ansible.builtin.apt:
    update_cache: true
    pkg:
      - vagrant
      - terraform
      - packer

- name: Add tailscale repository
  become: true
  tags: tailscale
  ansible.builtin.deb822_repository:
    name: tailscale
    state: present
    types: [deb]
    uris: "https://pkgs.tailscale.com/stable/ubuntu"
    suites: "{{ ansible_distribution_release }}"
    components: [main]
    signed_by: "https://pkgs.tailscale.com/stable/ubuntu/{{ ansible_distribution_release }}.noarmor.gpg"
    enabled: true

- name: Install tailscale tools
  become: true
  tags: tailscale
  ansible.builtin.apt:
    update_cache: true
    pkg:
      - tailscale

# note: this will require a restart to apply changes
- name: Set op service account token
  tags: 1password
  become: true
  ansible.builtin.copy:
    content: |
      OP_SERVICE_ACCOUNT_TOKEN={{ lookup('community.general.onepassword', 'OP_SERVICE_ACCOUNT_TOKEN', field='credential', vault='Infrastructure') }}
    dest: /etc/environment.d/90-op.conf
    mode: "644"

- name: Install ansible tools via pip (user install)
  tags: ansible
  become: true
  become_user: jason
  vars:
    pip_packages:
      - ansible-lint
  ansible.builtin.pip:
    name: "{{ item }}"
    state: present
    executable: pip3
    extra_args: --user
  with_items: "{{ pip_packages }}"

- name: Copy userspace icmp socket permission file
  become: true
  tags: ping
  ansible.builtin.copy:
    src: files/99-allow-ping.conf
    dest: /etc/sysctl.d/99-allow-ping.conf
    mode: '0644'
    owner: "root"
    group: "root"

- name: Download and install speedtest from Ookla
  tags: speedtest
  become: true
  ansible.builtin.unarchive:
    src: https://install.speedtest.net/app/cli/ookla-speedtest-1.2.0-linux-x86_64.tgz
    dest: /usr/local/bin
    remote_src: true
    exclude:
      - speedtest.5
      - speedtest.md

- name: Github CLI
  ansible.builtin.include_role:
    name: compscidr.github_cli.github_cli
    apply:
      tags: gh
      become: true
      vars:
        github_cli_gh_token: "{{ lookup('community.general.onepassword', 'GH CLI token', field='credential', vault='Infrastructure') }}"
  # https://github.com/ansible/ansible/issues/52063#issuecomment-509142583
  tags: always

# https://github.com/dlvhdr/gh-dash
# - name: Github CLI gh dash extension
#  ansible.builtin.include_role:
#    name: compscidr.github_cli.github_cli_extension
#    apply:
#      tags: gh
#      become: true
#      vars:
#        github_cli_extension_name: "dlvhdr/gh-dash"
#  tags: always
